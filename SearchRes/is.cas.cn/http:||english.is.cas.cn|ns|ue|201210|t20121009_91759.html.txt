http://english.is.cas.cn/ns/ue/201210/t20121009_91759.html
Venue: Lecture Room, 3rd Floor, Building 5#, State Key Laboratory of Computer Science, Institute of Software, Chinese Academy of Sciences
In the past decade, static validation of software systems has made spectacular progresses.  However, these techniques face enormous issues with the advent of multi-site, multi-language, multi-vendor programs such as Web applications, which come with no specifications to rely on.  In this talk, I present an experimental approach to software analysis, where we generate executions to systematically explore the space of software behavior and we use the outcome of these executions to guide the search even further.  In contrast to static techniques, experimental techniques are applicable to arbitrary executable programs; in contrast to dynamic techniques, they are not limited to just the observed runs.  Eventually, experimental techniques will provide precise specifications to allow for large-scale formal verification.
Andreas Zeller is a full professor for Software Engineering at Saarland University in Saarbr√ºcken, Germany. His research concerns the analysis of large software systems and their development process; his students are funded by companies like Google, Microsoft, or SAP. In 2010, Zeller was inducted as Fellow of the ACM for his contributions to automated debugging and mining software archives. In 2011, he received an ERC Advanced Grant, Europe's highest and most prestigious individual research grant, for work on specification mining and test case generation. 
