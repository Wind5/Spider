http://english.is.cas.cn/ns/ue/201206/t20120626_87609.html
Venue: Room 334, 3rd Floor, Building 5#, State Key Laboratory of Computer Science, Institute of Software, Chinese Academy of Sciences
We present a symbolic approach for checking consistency of OpenMP parallel programs. A parallel program is consistent if it yields the same result as its sequential version despite the execution order among threads. We find race conditions of an OpenMP parallel program, construct the formal model of its raced segments under relaxed memory models, and perform guided symbolic simulation to search consistency violations. The simulation terminates when(1) a witness has been found (the program is inconsistent), or (2) all reachable states have been explored (the program is consistent).
We have developed the tool Pathg by incorporating Omega library to solve race constraints and Red symbolic simulator to perform guided search. We show that Pathg can prove consistency of programs, identify races that modern OpenMP checkers failed to report, and find inconsistency witnesses effectively against benchmarks from the OpenMP Source Code Repository and the NAS Parallel benchmark suite.
----Welcome to subscribe to the SKLCS News RSS Service http://lcs.ios.ac.cn/feed/?feed=rss2. 
