http://www.is.cas.cn//xshd2016/xsbg2016/201509/t20150914_4423897.html
 文章来源：  |  发布时间：2015-09-14  |  【打印】 【关闭】
 　　SKLCS Seminar 　　  　　Title: Post-silicon Functional Validation with Virtual Prototypes 　　Speaker: Fei Xie (Portland State University, USA) 　　         web.cecs.pdx.edu/~xie 　　  　　Time: 10:00, 15th September 2015 　　  　　Venue: Seminar Room (334), Building 5, 　　       Institute of Software, 　　       Chinese Academy of Sciences, 　　       4 Zhongguancun South Fourth Street, 　　       Haidian District, Beijing 100190. 　　  　　Abstract: 　　Virtual prototypes are increasingly used to enable shift-left in system development, i.e., early software development before hardware is available. However, the benefits of shift-left will not be fully realized if software does not port readily from virtual prototypes to silicon and system tests are not ready when silicon and software are integrated. Therefore, it is greatly desired that post-silicon functional tests can be generated from virtual prototypes and when these tests are applied over the software and silicon integration, functional differences between virtual prototypes and silicon can be easily uncovered. 　　  　　In this talk, we present our approach to post-silicon functional validation with virtual prototypes. This approach has three key components: (1) post-silicon functional test coverage analysis with virtual prototypes, (2) automatic concolic test generation from virtual prototypes, and (3) post-silicon conformance checking with virtual prototypes. Application of this approach to real-world silicon devices and their virtual prototypes has led to thousands of automatically generated tests, doubled test coverage in various metrics, and detection of tens of virtual-silicon inconsistencies previously unknown. 　　  　　Biography: 　　Fei Xie is a professor in the Department of Computer Science, Portland State University. His research interests are primarily in the areas of embedded systems, software engineering, and formal methods. He is particularly interested in development of formal method based techniques and tools for building safe, secure, and reliable software and embedded systems. 
