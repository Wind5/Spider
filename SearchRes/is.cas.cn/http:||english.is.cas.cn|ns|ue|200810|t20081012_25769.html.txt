http://english.is.cas.cn/ns/ue/200810/t20081012_25769.html
 [10-14]Combining Development and Property Evaluation of Parallel Computational Models ... 
 Titleï¼šCombining Development and Property Evaluation of Parallel Computational Models: Models of Model Implementations
        Department of Computer Sciences         University of Texas at Austin         Austin, Texas 78712         browne@cs.utexas.edu
The vast rise in computational power of parallel computers is enabling computational evaluation of every more faithful and thus ever more complex models of physical and logical systems. The programs implementing these models are rising in complexity not only because the models are becoming more complex but because the parallel execution environments upon which the programs execute are becoming more complex. These simulation models often exist as families of models used to model many somewhat different systems so that many versions of the implementing programs are required. Models which adapt to the simulated world as it is simulated lead to a requirement that the implementing program must be self-adaptive during simulation runs. Therefore the implementing programs are complex evolving systems which should themselves be modeled and simulated and whose properties should be evaluated before they are used and trusted. Current development methods decouple development of the programs implementing computational simulation models from analysis and evaluation of these programs. There is a need to combine effective methods for constructing programs implementing computational simulation models with modeling of these programs to determine the performance and correctness properties of these programs. This lecture defines and describes a combined development and property analysis/evaluation methodology for the implementation of simulation models as parallel computation systems. The two foundational concepts are a component-based development methodology which separates component behavioral specifications and their implementations and a unification of abstract (simulated) and concrete executions of parallel programs based on an extended version of a Lamport clock. The component-based methodology enables automated composition of parallel programs from components and runtime adaptivity at the component level. The separation of concepts implicit in separating specifications and implementations enables verification of correctness of parallel computation structures. An implementation of these concepts will be described and examples of applications will be given. 
Browne is Professor of Computer Science and Physics and holds the Regents Chair #2 in Computer Sciences at The University of Texas at Austin. He taught in the Physics Department at The University of Texas from 1960 through 1964. He was, from 1965 through 1968, Professor of Computer Science at Queens University in Belfast and directed the Computer Laboratory. Browne joined The University of Texas in 1968 as Professor of Physics and Computer Science. He served as Department Chair for Computer Sciences in 1968-69,1971-75 and 1984-87. Brownes research interests span parallel programming and computation with a focus on applications in science and engineering, performance measurement and analysis, software engineering and formal methods including unification of verification and validation methods for software systems. He is a Fellow of the Association for Computing Machinery, the American Physical Society, the American Association for the Advancement of Science and the Institute for Constructive Capitalism. Browne has published approximately 100 papers in computational physics and 250 papers in Computer Science. Browne has also been active in technology transfer and the technology industry including founding Hyperformix Inc., which sells products and services for performance management and engineering for enterprise level computer systems. 
