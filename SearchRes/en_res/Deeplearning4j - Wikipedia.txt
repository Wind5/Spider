Deeplearning4j is a deep learning programming library written for Java and the Java virtual machine (JVM)[1][2] and a computing framework with wide support for deep learning algorithms.[3] Deeplearning4j includes implementations of the restricted Boltzmann machine, deep belief net, deep autoencoder, stacked denoising autoencoder and recursive neural tensor network, word2vec, doc2vec, and GloVe. These algorithms all include distributed parallel versions that integrate with Apache Hadoop and Spark.[4]
Deeplearning4j is open-source software released under Apache License 2.0,[5] developed mainly by a machine learning group in San Francisco led by Adam Gibson.[6][7] It is supported commercially by the startup Skymind.
Deeplearning4j relies on the widely used programming language, Java, though it is compatible with Clojure and includes a Scala application programming interface (API). It is powered by its own open-source numerical computing library, ND4J, and works with both central processing units (CPUs) and graphics processing units (GPUs).[8][9]
Deeplearning4j has been used in several commercial and academic applications. The code is hosted on GitHub.[10] A support forum is maintained on Gitter.[11]
The framework is composable, meaning shallow neural nets such as restricted Boltzmann machines, convolutional nets, autoencoders, and recurrent nets can be added to one another to create deep nets of varying types. It also has extensive visualization tools,[12] and a computation graph.[13]
Training with Deeplearning4j occurs in a cluster. Neural nets are trained in parallel via iterative reduce, which works on Hadoop-YARN and on Spark.[6][14] Deeplearning4j also integrates with CUDA kernels to conduct pure GPU operations, and works with distributed GPUs.
Deeplearning4j includes an n-dimensional array class using ND4J that allows scientific computing in Java and Scala, similar to the functions that NumPy provides to Python. It's effectively based on a library for linear algebra and matrix manipulation in a production environment.
DataVec vectorizes various file formats and data types using an input/output format system similar to Hadoop's use of MapReduce; that is, it turns various data types into columns of scalars termed vectors. DataVec is designed to vectorize CSVs, images, sound, text, video, and time series.[15][16]
Deeplearning4j includes a vector space modeling and topic modeling toolkit, implemented in Java and integrating with parallel GPUs for performance. It is designed to handle large text sets.
Deeplearning4j includes implementations of term frequency–inverse document frequency (tf–idf), deep learning, and Mikolov's word2vec algorithm,[17] doc2vec, and GloVe, reimplemented and optimized in Java. It relies on t-distributed stochastic neighbor embedding (t-SNE) for word-cloud visualizations.
Real-world use cases for Deeplearning4j include network intrusion detection and cybersecurity, fraud detection for the financial sector,[18][19] anomaly detection in industries such as manufacturing, recommender systems in e-commerce and advertising,[20] and image recognition.[21] Deeplearning4j has integrated with other machine-learning platforms such as RapidMiner, Prediction.io,[22] and Weka.[23]
Deeplearning4j is as fast as Caffe for non-trivial image recognition tasks using multiple GPUs.[24] For programmers unfamiliar with HPC on the JVM, there are several parameters that must be adjusted to optimize neural network training time. These include setting the heap space, the garbage collection algorithm, employing off-heap memory and pre-saving data (pickling) for faster ETL.[25] Together, these optimizations can lead to a 10x acceleration in performance with Deeplearning4j.
Deeplearning4j can be used via multiple API languages including Java, Scala, Python and Clojure. Its Scala API is called ScalNet.[26] Keras serves as its Python API.[27] And its Clojure wrapper is known as DL4CLJ.[28] The core languages performing the large-scale mathematical operations necessary for deep learning are C, C++ and CUDA C.
^ Metz, Cade (2014-06-02). "The Mission to Bring Google's AI to the Rest of the World". Wired.com. Retrieved 2014-06-28. 
^ Vance, Ashlee (2014-06-03). "Deep Learning for (Some of) the People". Bloomberg Businessweek. Retrieved 2014-06-28. 
^ Novet, Jordan (2015-11-14). "Want an open-source deep learning framework? Take your pick". VentureBeat. Retrieved 2015-11-24. 
^ TV, Functional (2015-02-12). "Adam Gibson, DeepLearning4j on Spark and Data Science on JVM with nd4j, SF Spark @Galvanize 20150212". SF Spark Meetup. Retrieved 2015-03-01. 
^ Harris, Derrick (2014-06-02). "A startup called Skymind launches, pushing open source deep learning". GigaOM.com. Retrieved 2014-06-29. 
^ Novet, Jordan (2014-06-02). "Skymind launches with open-source, plug-and-play deep learning features for your app". Retrieved 2014-06-29. 
"ND4J: N-Dimensional Arrays for Java and Scala, A Linear Algebra Library". 
Categories: Applied machine learningArtificial neural networksCluster computingData mining and machine learning softwareDeep learningFree science softwareFree software programmed in Java (programming language)Free software programmed in ScalaFree statistical softwareHadoopImage processingInformation technology companies of the United StatesJava (programming language) librariesJava platformJava programming language familyJVM programming languagesMachine learningNatural language processingNumerical programming languagesOpen source artificial intelligenceScala (programming language)Software using the Apache licenseTechnology companies based in the San Francisco Bay AreaHidden categories: Official website different in Wikidata and Wikipedia
 This page was last edited on 30 August 2017, at 20:53.
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
