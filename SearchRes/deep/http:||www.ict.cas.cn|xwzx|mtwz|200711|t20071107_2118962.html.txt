http://www.ict.cas.cn/xwzx/mtwz/200711/t20071107_2118962.html
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 2007-11-07 | 作者：中科院计算所 罗杰文 |来源：计算机世界报 | 【大 中 小】【打印】【关闭】
 <?xml version=1.0 encoding=gb2312?><![CDATA[        自治计算需要解决日益复杂的计算环境中所面临的管理与成本问题。主体技术为自主计算在系统架构、自配置、自优化、策略以及软件工程方法等方面的研究给出了解决问题较通用的方法，推进了自治计算研究的系统化和标准化。 
自治计算是解决软件复杂性的出路         随着计算机技术的不断发展和应用的广泛普及，随着网络和分布式系统的增长及改变，计算机软件系统结构和计算机组织结构的复杂性不断增加。很多企业花费数十年的时间不断建造越来越复杂的计算机系统，以期解决各种各样越来越复杂的商业问题。然而，具有讽刺意味的是，计算机系统的复杂性本身已经成为企业急需解决的问题。软件复杂性危机严重阻碍了IT产业向前发展，解决软件复杂性危机是进入下一个计算时代的先决条件。自治计算（Autonomic Computing,又译为自主计算）技术就是为了解决软件复杂性危机而提出的新兴课题。         IT系统拥有自我调节能力而无需人为过多干预, 这就是自治计算的思想——将复杂性嵌入到系统设施本身，使用户觉察不到复杂性，只需发号施令而不必关心系统执行命令的具体过程。这意味着，系统本身能够自主运行，并自我调整以适应不同的环境。         自治计算的灵感来自于人体复杂的自主神经系统，它以同样的方式预测系统的需求和清除故障——在无需人工干预的情况下聪明地运行。所要解决的是日益复杂的计算环境中所面临的管理与成本问题。自治计算系统与人体的自主神经系统的重要差异在于，人体做出的很多自主决定是不自觉的，而计算机系统的自治计算组件则遵循人所下达的命令。自治计算也不同于人工智能，虽然后者在某些方面对其有借鉴意义。自治计算并不将模仿人类思维作为主要目标,而是具有适应动态变化环境的自我管理能力。 自治计算使计算机系统具有自管理能力，包括以下四个部分:         自配置: 系统根据组件的增减或流量的变化动态地自我重新配置，以使架构始终保持强健和高效。         自恢复: 系统能够侦测到运行中的错误，并且在不妨碍系统正常工作的前提下自动修正错误，这对提高系统的可用性有很大帮助。         自优化: 系统根据用户在不同时刻的不同需求或流量重新调配资源，以保证最佳的服务质量（QoS）。         自保护: 确保当未授权的入侵、病毒攻击等具有敌意的行为或系统过载发生时，系统能够及时发现并实施保护。 
主体技术解决自治计算挑战         基于自治计算理念下的软件能够自动采取行动并为基础设施提供自主系统管理功能， 使包括系统管理软件在内的计算机系统环境能够实现自配置、自优化、自恢复和自保护。         自治计算描述了美好的蓝图，然而完全实现自治计算不是一蹴而就的。理论上讲，问题确定、自主监测、复杂性分析、策略管理等自治计算中的关键问题都还没有解决，面临许多的科学问题，例如行为模型、健壮性理论、学习优化理论、协商理论、自动统计建模等。从工程上看，缺乏通用且行之有效的系统模型，缺乏对自治计算系统软件生命周期的理解，更缺乏的是自治计算软件工程工具，来进行自治计算系统的分析、设计、开发和部署。实现自治计算蓝图是个进化的过程，按照其自主性成熟度可分为五个等级:         基础级: IT专业人员对IT系统中每个元素单独管理，进行安装、监控、维护、卸载等。         管理级: 系统管理技术用来把分散的系统信息收集到控制台，从而节省了管理员进行信息收集、合成所需的时间。         预测级: 使用新的技术把IT系统中的多个元素进行关联，预测最优配置，并给管理员提供决策性建议。         适应级: IT系统可以根据可用信息和环境知识自主地采取行动。随着技术的发展，管理员越来越乐于接受IT系统给的建议，IT系统越来越趋于自主。         自主级: 管理员只需下达商业策略和目标，IT系统自主运行予以实现。管理员可以监控商业过程，并改变商业策略。 
有关自治计算项目进展         从2001年IBM正式宣布进行自治计算研究起，越来越多的人和组织进行了自治计算方面的研究。IBM是自治计算研究的发起者，也是自治计算的主要研究力量，国际上这方面的研究项目
