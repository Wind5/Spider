http://www.ict.cas.cn/shye/tzgg/200804/t20080423_2114473.html
住宿安排：1．北京康拓宾馆：        地点：北京海淀区中关村南一条4号        价格：240元/标准二人间,180元/单人间，280元/三人间 订房电话：626349752. 北京天创宾馆：        地点：北京海淀区中关村南一条甲1号        价格：398元/标准二人间，248元/单人间,558元/三人间 订房电话：511920003. 北京物科宾馆：        地点：北京海淀区中关村南三街8号        价格：338元/标准二人间，150元/经济型标间，468元/三人间 订房电话：82649482   
交通路线：        北京站：乘坐地铁到积水潭，换乘47路公交车，保福寺桥西站下车南行；        西客站：乘坐47路公交车，保福寺桥西站下车南行；        飞机：乘坐民航巴士，中关村三桥下车南行。
Locality and Parallelismin Program Behavior: Computational Understanding ofTime, Space, and ComplexityChen Ding Associate ProfessorComputer Science DepartmentUniversity of Rochester
  This week-long course aims to introduce, inspect, and interlink a large body of research in the last decade on understanding and exploiting locality and parallelism in large-scale program executions. Specific topics include 
    ◇Introduction program behavior research: new science for old problems programming languages, programs, and program execution         ·six dimensions of program behavior         ·program and machine balance in high-performance computing         ·memory bandwidth bottleneck and multi-core challenges         ·Is computer science science?     ◇The input dimension whole-program behavior         ·whole-program locality         ·reuse distance measurement         ·compiler analysis         ·cross-input models for sequential and parallel code     ◇The code dimension programming languages and program analysis         ·expression and implementation of parallelism; software speculative parallelization at loop, function and region levels, new abstractions; hardware thread-level speculation         ·other select topics: code tuning, blended analysis, fractal analysis, telescoping languages, array languages     ◇The computation dimension program transformation for temporal locality and parallelism, advanced algorithms         ·compiler locality transformation: unroll-and-jam, loop fusion, high-dimensional optimization, transitive closures, space-filling curves, computation regrouping, limit of locality         ·parallelization: dependence theory and vectorization, integer set equations, multi-partitioning, partitioning with replication, OpenMP? , streaming languages         ·hierarchical or cache oblivious computation, self-organizing data structures         ·program tuning tools     ◇The data dimension program transformation for spatial locality, data placement and prefetching         ·reference affinity, hardness of data placement, hierarchical data placement         ·structure splitting and array regrouping, object placement, and code placement         ·dynamic data transformation, dynamic sampling, super pages         ·data placement and prefetching using stream models and stride models     ◇The time dimension program and execution phases, behavior adaptation         ·working set, memory phases, active profiling, and uses in memory management         ·loop and function phases and interval phases     ◇The environment dimension memory and cache sharing, concurrency control         ·reuse distance-based virtual memory management, adaptive garbage collection, file caching, and web caching         ·the effect of cache sharing         ·explicit concurrency control: locking, lock-free synchronization, and non-blocking data structures         ·implicit concurrency control: serializability and linearizability, software transactional memory 
  A significant portion of the material will be drawn from work done at the University of Rochester and Rice University. There will be pre- and post-lecture questions as homework and question-and-answer sessions. The instructor may make research tools available for students to analyze and improve programs of their choice. The material will be in English. Most lecturing is likely in Chinese. The instructor strives not to mix words from the two languages. 
  Chen Ding is an Associate Professor in the Computer Science Department at the University of Rochester, Rochester, New York, USA. His research seeks to understand the composite and emergent behavior in complex computer systems, including program locality and scalability, reference affinity, and program phases. Based on behavior models, his group develops software techniques for program transformation, memory management, and dynamic parallelization. His work received young investigator awards from NSF and DOE. He co-founded the ACM SIGPLAN Workshop on Memory System Performance and Correctness (MSPC) and was a visiting researcher at Microsoft Research and a visiting professor at MIT. More information about his work can be found at http://www.cs.rochester.edu/~cding/ 
