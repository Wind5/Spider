http://www.ict.cas.cn/xwzx/xshd/200911/t20091105_2649287.html
摘要： 　The increasingly rich computing and shared cache/memory resources in multi-core processors (many-cores in the near future) cannot be best utilized unless multi-threaded program execution can achieve high parallelism/concurrency by harvesting computing cycles of multi-cores, subject to low cache misses by exploiting locality in the last level caches. There are several serious and difficult challenges that hinder multi-core processors from being a productive execution environment. 　We have developed a runtime environment connecting multi-threaded applications and system software in a collaborative way, where operating system is guided by application domain knowledge including data access locality and execution behavior to schedule tasks and allocate shared hardware resources for each running thread. We evaluate our environment by concurrent database transactions and multi-threaded scientific computing programs, and show strong performance and throughput improvement by minimizing cache conflicts and misses in the last level caches of multi-cores. We further develop our system as a general framework to automatically manage multi-threaded applications on multi-core processors. 
